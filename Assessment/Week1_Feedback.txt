Starting weekly assessment for Tom, Week1

Current Marks = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 99.92 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: Week1, Assessment, Week2, .git

Found the following files in parent directory: README.txt, .gitignore

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:
**********************************************************************
*~ 
*.tmp
**********************************************************************

Found README in parent directory, named: README.txt

Printing contents of README.txt:
**********************************************************************
My CMEE 2017-2018 Coursework Repository
**********************************************************************

======================================================================
Looking for the weekly directories...

Found 2 weekly directories: Week1, Week2

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: Code, Data, Sandbox

Found the following files: Readme.txt, Workings

Checking for readme file in weekly directory...

Found README in parent directory, named: Readme.txt

Printing contents of Readme.txt:
**********************************************************************
~#~ Week 1 README.txt ~#~
Tom Davy | Oct 2017 | t.davy17@ic.ac.uk

#~# CONTENTS #~#

1) Code

2) Tree Directory

#~#~#~#~#

1) Code

##boilerplate.sh 

~#Generic bash shell script. Standard boilerplate. -e argument of echo enables interpretation of backslashes, here /n. "/n" (more precisely "n"; the / ensures the bash terminal interprets n as an argument) forces the line to be expressed on a newline.

##CompileLateX.sh

~#Generic LateX/bibtex compilation script. Includes clauses to remove unwanted filetypes (aux / dvi / log / nav / out / snm / toc). Also includes evince, which is a pdf viewer.


##ConcatenateTwoFiles.sh

~#Generic bash script. Reads two files with cat, then exports a sequential newline concatenation to a chosen file.
	## USAGE ## 
		~# bash ConcatenateTwoFiles.sh $inputfile1 $inputfile2 $ouputfilename 

##CountLines.sh

~#Generic bash script for counting lines of file with "wc -l".
	##USAGE##
		~# bash Countlines.sh $file


##FirstBiblio.bib

~# bibtex generic reference file


##FirstExample.bbl

~# Auto-generated bbl file from LaTeX file compilation.


##FirstExample.blg

~#Auto-gen log of LaTeX generation

##FirstExample.pdf

~# pdflatex compilation output of FirstExample.tex and FirstBiblio.bib

##FirstExample.tex

~# LaTeX template. Included examples of bibtext referencing, sectioning and maths formula.

##MyExampleSccript.sh 

~# Echoes users name. Twice. Very cute. Possibly endangered.

##tabtocsv.sh

~# bash script for converting .tsv to .csv. Outputs file in same directory/folder as input file with ammended .csv file extension. Ammended using bash name arguments to firstly strip the filename of all extensions (y and z work to remove any characters after the * and before the /, inclusive). An output is then described as z.csv. Unfortunately this method currently asks for direct description of recipient directory. Though not problematic here, this is inflexible. Some fancy word-play also makes the output message more readable and the program's function obvious.


##UnixPrac1.txt
~#The 5 single line bash commands used for the bash scripting practical


##UnixPrac1_Instruct.txt
~#The 5 tasks set in the bash scripting practical

##UnixPrac1_Test.txt 
~#Testing ground/"echochamber" for sending and revising code

##variables.sh
~# bash script that summates two strings, then two integers. Demonstrates mindfulness in data type usage.

#~#~#~#~#~#~#


3)

.
├── Code
│   ├── boilerplate.sh
│   ├── CompileLaTeX.sh
│   ├── ConcatenateTwoFiles.sh
│   ├── CountLines.sh
│   ├── csvtospace.sh
│   ├── FirstBiblio.bib
│   ├── FirstExample.bbl
│   ├── FirstExample.blg
│   ├── FirstExample.pdf
│   ├── FirstExample.tex
│   ├── MyExampleScript.sh
│   ├── tabtocsv.sh
│   ├── UnixPrac1_Instruct.txt
│   ├── UnixPrac1_Test.txt
│   ├── UnixPrac1.txt
│   └── variables.sh
├── Data
│   ├── fasta
│   │   ├── 407228326.fasta
│   │   ├── 407228412.fasta
│   │   ├── ATGCtest.txt
│   │   ├── ATGCtestx3.txt
│   │   ├── echo
│   │   ├── E.coli.fasta
│   │   ├── expr
│   │   ├── F
│   │   ├── genome.txt
│   │   ├── Genome.txt
│   │   └── Help.txt
│   ├── spawannxs.txt
│   └── temp
│       ├── 1800.csv
│       ├── 1800.csv.csv
│       ├── 1800.csv.ssv
│       ├── 1801.csv
│       ├── 1801.csv.ssv
│       ├── 1801.csv.ssv.csv
│       ├── 1801test
│       ├── 1801test.csv
│       ├── 1801test.tsv
│       ├── 1802.csv
│       ├── 1802.csv.ssv
│       ├── 1803.csv
│       └── 1803.csv.ssv
├── Readme.txt
├── Sandbox
│   ├── Data
│   │   ├── fasta
│   │   │   ├── 407228326.fasta
│   │   │   ├── 407228412.fasta
│   │   │   ├── E.coli.fasta
│   │   │   ├── E.coli.Genome.txt
│   │   │   ├── F
│   │   │   └── Genome.txt
│   │   └── spawannxs.txt
│   ├── ListRootDir.txt
│   ├── TestFind
│   │   ├── Dir1
│   │   │   ├── Dir11
│   │   │   │   └── Dir111
│   │   │   │       └── File111.txt
│   │   │   ├── File1.csv
│   │   │   ├── File1.tex
│   │   │   └── File1.txt
│   │   ├── Dir2
│   │   │   ├── File2.csv
│   │   │   ├── File2.tex
│   │   │   └── File2.txt
│   │   └── Dir3
│   │       └── File3.txt
│   ├── test.txt
│   └── TestWild
│       ├── AnotherFile.csv
│       ├── AnotherFile.txt
│       ├── combined
│       ├── eva
│       │   └── VCF
│       ├── File1.csv
│       ├── File1txt
│       ├── file2.csv
│       ├── File2.txt
│       ├── file3.csv
│       ├── File3.txt
│       ├── file4.csv
│       ├── File4.txt
│       └── README
└── Workings

15 directories, 73 files


		


**********************************************************************

Results directory missing!

Found 13 code files: ConcatenateTwoFiles.sh, UnixPrac1_Test.txt, CountLines.sh, variables.sh, CompileLaTeX.sh, csvtospace.sh, FirstExample.tex, MyExampleScript.sh, FirstBiblio.bib, UnixPrac1.txt, tabtocsv.sh, UnixPrac1_Instruct.txt, boilerplate.sh

Found the following extra files: FirstExample.pdf, .csv, FirstExample.blg, FirstExample.bbl, .log, .ssv
0.5 pt deducted per extra file

Current Marks = 97.0

======================================================================
Testing script/code files...

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:
**********************************************************************
#!/bin/bash
cat $1 > $3
cat $2 >> $3
echo "Merged File is"
cat $3
**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 

**********************************************************************
Merged File is

**********************************************************************

Encountered error:
ConcatenateTwoFiles.sh: line 2: $3: ambiguous redirect
ConcatenateTwoFiles.sh: line 3: $3: ambiguous redirect

======================================================================
Inspecting script file UnixPrac1_Test.txt...

File contents are:
**********************************************************************
cat -tail E.coli.fasta #Displays Only Genetic Code from Basic Fasta File




tail -n +2 E.coli.fasta #Better Way to Truncate initial line
wc -l *.fasta # Calls Line Numbers for all Three Fasta Files Independently and Totalled
#Above methods for subtracting first line show no difference in char counts
tail -n +2 E.coli.fasta > Genome.txt # Outputs Genetic Sequence into Genome.txt
wc -m Genome.txt #Counts Characters of Genome.txt, i.e. number of basesin Genome
tail -n +2 E.coli.fasta | wc -m
tail -n +2 E.coli.fasta | grep -o ATGC
tail -n +2 E.coli.fasta | grep -o G | wc #Generic Line to Find number of single nucleotide
tail -n +2 E.coli.fasta | grep -o '[A-Z]' | wc -l #Alphanumeric search to avoid extra symbols
tail -n +2 E.coli.fasta | grep -o '[A,T,G,C]' | wc -l #Corrected nt estimation using precision grep
tail -n +2 E.coli.fasta | grep -o '[A|T]' | wc -l # Differing grep clause for A|T estimation
tail -n +2 E.coli.fasta | grep -o '[A|T]' | wc -l > AT.tmp #test for tmp file
myvar=2306454 | expr 2306454 / 4# Testing using float storage of variable as part of downstream calculation
echo 2306454 / 2379681 # prints ratio numeric values without actually dividing :(
echo 2306454 / 2379681
expr 2306454 / 2379681 #Divided, but to 1 s.f.
echo 2306454 / 2379681 | bc -l #Ratio computing
2306454 / 2379681 | bc -l #Ratio computing 2
[$](tail -n +2 ~/CMEECourseWork/Week1/Data/fasta/E.coli.fasta | grep -o '[A|T]' | wc -l) / [$](tail -n +2 ~/CMEECourseWork/Week1/Data/fasta/E.coli.fasta | grep -o '[G|C]' | wc -l) | bc -l #Ratio computing 3
$(tail -n +2 ~/CMEECourseWork/Week1/Data/fasta/E.coli.fasta | grep -o '[A|T]' | wc -l) / $(tail -n +2 ~/CMEECourseWork/Week1/Data/fasta/E.coli.fasta | grep -o '[G|C]' | wc -l) | bc -l #Ratio computing script. Remove square brackets before usage, as square


$(tail -n +2 ~/CMEECourseWork/Week1/Data/fasta/E.coli.fasta | grep -o '[A|T]' | wc -l) / $(tail -n +2 ~/CMEECourseWork/Week1/Data/fasta/E.coli.fasta | grep -o '[G|C]' | wc -l) | bc -l



**********************************************************************

Testing UnixPrac1_Test.txt...

======================================================================
Inspecting script file CountLines.sh...

File contents are:
**********************************************************************
#!/bin/bash
NumLines=`wc -l < $1`
echo "The file $1 has $NumLines lines"
echo

#exit
**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 

**********************************************************************
The file  has  lines


**********************************************************************

Encountered error:
CountLines.sh: line 2: $1: ambiguous redirect

======================================================================
Inspecting script file variables.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Shows the use of variables
MyVar='some string'
echo 'the current value of the variable is' $MyVar
echo 'Please enter a new string'
read MyVar
echo 'The Current Value of the Variable is' $MyVar
# # Reading multiple values
echo 'Enter two numbers separated by space(s)'
read a b
echo 'you entered' $a 'and' $b '. Their sum is:'
mysum=`expr $a + $b`
echo $mysum

#exit
**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 

**********************************************************************
the current value of the variable is some string
Please enter a new string
The Current Value of the Variable is
Enter two numbers separated by space(s)
you entered and . Their sum is:


**********************************************************************

Encountered error:
expr: syntax error

======================================================================
Inspecting script file CompileLaTeX.sh...

File contents are:
**********************************************************************
#!/bin/bash
pdflatex $1.tex
pdflatex $1.tex
bibtex $1
pdflatex $1
pdflatex $1
evince $1.pdf &

## Cleanup

rm *~
rm *.aux
rm *.dvi
rm *.log
rm *.nav
rm *.out
rm *.snm
rm *.toc
**********************************************************************

Testing CompileLaTeX.sh...

Output (only first 500 characters): 

**********************************************************************
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
entering extended mode
(/usr/share/texlive/texmf-dist/tex/latex/tools/.tex
LaTeX2e <2016/02/01>
Babel <3.9q> and hyphenation patterns for 81 language(s) loaded.
File ignored)
*
! Emergency stop.
<*> .tex
        
!  ==> Fatal error occurred, no output PDF file produced!
Transcript written on .log.
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (pre
**********************************************************************

Encountered error:
bibtex: Need exactly one file argument.
Try `bibtex --help' for more information.
rm: cannot remove '*~': No such file or directory
rm: cannot remove '*.aux': No such file or directory
rm: cannot remove '*.dvi': No such file or directory
rm: cannot remove '*.log': No such file or directory
rm: cannot remove '*.nav': No such file or directory
rm: cannot remove '*.out': No such file or directory
rm: cannot remove '*.snm': No such file or directory
rm: cannot remove '*.toc': No such file or directory

======================================================================
Inspecting script file csvtospace.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Script: csvtospace.sh
#Desc: substitute the csv in the files with spaces
      saves the output into a .ssv file
#Arguments: 1-> tab delimited file
#Date: Oct 17

echo "Creating a comma delimited version of $1 ..."

cat $1 | tr -s "," " " >> $1.ssv

echo "Done! :)"

exit
**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 

**********************************************************************
Creating a comma delimited version of  ...
Done! :)

**********************************************************************

Encountered error:
csvtospace.sh: line 4: saves: command not found

======================================================================
Inspecting script file FirstExample.tex...

File contents are:
**********************************************************************
\documentclass[12pt]{article}
\title{A Simple Document}
\author{Tom Davy}
\date{}
\begin{document}
	\maketitle
	
	\begin{abstract}
	  This paper must be cool!
	\end{abstract}
	
	\section{Introduction}
	  Blah Blah!
	  
	\section{Materials \& Methods}
	One of the most famous equations is:
	\begin{equation}
	  E = mc^2
	\end{equation}
	This equation was first proposed by Einstein in 1905
	\cite{einstein1905does}.
	
	\bibliographystyle{plain}
	\bibliography{FirstBiblio}
\end{document}
**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:
**********************************************************************
#!/bin/bash

msg1="Hello"
msg2=$USER
echo "$msg1 $msg2"

echo "Hello $USER"
echo

#exit
**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 

**********************************************************************
Hello mhasoba
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00763s

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:
**********************************************************************
@article{einstein1905does,
  title={Does the inertia of a body depend upon its energy-content},
  author={Einstein, Albert},
  journal={Ann Phys},
  volume={18},
  pages={639--641},
  year={1905}
}
**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:
**********************************************************************
#1 wc -l ~/CMEECourseWork/Week1/Data/fasta/*.fasta

## A simple wc with argument -l counts lines of files. Importantly, as all fasta files are required to have their line counts evaluated, we use "*.fasta" to call for all files with the .fasta filetype in the Data folder.
#Herein this document I've specified file paths fully (i.e. ~/CMEE../../....). If purely working in Code directory (which may be preferable depending on wanting an environment to output program logs) this could be substituted with '../Data/*.fasta'. 


#2 tail -n +2  ~/CMEECourseWork/Week1/Data/fasta/E.coli.fasta 

##tail calls for the 'tail fo the file, with -n +2 denoting which line to start calling from (herein the 2nd, where the first line in basic fasta files is used for basic metadata)

#3 tail -n +2  ~/CMEECourseWork/Week1/Data/fasta/E.coli.fasta | grep -o '[A|T|G|C]' | wc -l 

## Reusing the preamble of previous line, a pipeline ("|") is inserted to forward the output of tail into grep. "-o" designates that the pattern search is output into one character lines, while "'[A|T|G|C]'" searches independently for each nucleotide base. ***THIS ONLY WORKS IN A BASIC FASTA FILE*** Typesetting of fastq. files aside, symbols denoting questionable sequence (such as x, or lower case nucleotide letters) will be missed. The latter point is amendable with the grep argument "-i", i.e. case "i"nsensitivity (or choose your designatory i as you please). A final pipe into wc (word count) with argument -l (line) counts the number of lines output. Grep'ing (sic) in this way avoids issues with newline characters through specific searching for those alphanumeric characters. A solution could be to perform a bc mathematic pipeline invoving a second grep, this time with argument -v (or -vi preferably) [A|T|G|C] which would only present non-matching characters and could be used to calculate a non-standard base character % in the fasta. A step towards error/high-coverage calculations!

#4 tail -n +2 ~/CMEECourseWork/Week1/Data/fasta/E.coli.fasta | grep -o ATGC | wc -l

## With tail calling the genomic sequence to ensure no matched with metadata (though this would not happen in this specific instance) a grep is performed, without square brackets, for ATGC. -o again prints as single match lines, with wc -l counting this. 
#Importantly, this pattern searching method does not discriminate between "ATGC" and "ATGCATGC", which may be important dependend on analysis. 26 instances of ATGCATGC exist in this genome. An inefficient work around involving using "bc" for ad-hoc mathematics to subtract this, should it not be deemed relevant, could be applied (See #5 for more on bc). 
#A flexible long-term solution could be provided with higher order programming languages (not to bash BASH, that is).
#


#5 bc -l <<< $(tail -n +2 ~/CMEECourseWork/Week1/Data/fasta/E.coli.fasta | grep -o '[A|T]' | wc -l) / $(tail -n +2 ~/CMEECourseWork/Week1/Data/fasta/E.coli.fasta | grep -o '[G|C]' | wc -l)

## Two seperate grep commands are bracketed with a preceding $ and a interstitial /. These are then fed into the command line tool bc (Merely adding " |bc" at the end will not invoke the program, and instead the output of the pipeline will look likie "x / y". The $ values specify a value for calculation, and / specifies division, in bc. Without bc argument -l, the output string is "0", due to the preference of bash/bc not to perform ~floating point arithmetic~. So we can force this by using -l!

**********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Tom Davy [t.davy17@imperial.ac.uk]
# Script: tabtocsv.sh
# Desc: Substitute the tabs in files with commas (.tab -> .csv)
# Arguments: 1-> tab delimited file
# Date: Oct 2017

echo "Creating a comma delimited version of $1 ..."

x="$1.csv"
y=${x%%.*}
z=${y##*/}

cat $1 | tr -s "\t" "," >> ~/CMEECourseWork/Week1/Data/temp/$z.csv

echo -e "\n>>>Created $z.csv!<<<\n"

exit

**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 

**********************************************************************
Creating a comma delimited version of  ...

>>>Created .csv!<<<


**********************************************************************

Encountered error:
tabtocsv.sh: line 14: /home/mhasoba/CMEECourseWork/Week1/Data/temp/.csv: No such file or directory

======================================================================
Inspecting script file UnixPrac1_Instruct.txt...

File contents are:
**********************************************************************
1. Count Line Numbers
2.Print Sequence, Not Fasta Header, for E.Coli Genome
3. Count E.coli genome length
4. Count matches of region ATGC
5. Compute AT/GC Ratio
**********************************************************************

Testing UnixPrac1_Instruct.txt...

======================================================================
Inspecting script file boilerplate.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Tom Davy [t.davy17@ic.ac.uk]
# Script: boilerplate.sh
# Desc: simple boilerplate for shell scripts
#Arguments: None
#Date: Oct 2017

echo -e "/nThis is a shell script!/n"

#exit
**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 

**********************************************************************
/nThis is a shell script!/n

**********************************************************************

Code ran without errors

Time consumed = 0.00551s

======================================================================
======================================================================
Finished running scripts

Ran into 6 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Marks for the Week = 97.0

NOTE THAT THESE ARE NOT THE FINAL MARKS FOR THE WEEK, BUT AN UPPER BOUND ON THE MARKS!